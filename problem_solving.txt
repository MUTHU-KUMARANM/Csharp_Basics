1
7 2
12 8 3
16 13 9 4
19 17 14 10 5
21 20 18 15 11 6
Console.Write("Enter a n : ");
int n = int .Parse(Console.ReadLine());
int a = 1;
int b = 1;
int j;
int k;
for (int i = 0; i < n; i++)
{
    b = a;
    k = i;
    for ( j = n; j >= n-i; j--)
    {
        Console.Write(b+" ");
        b = b - (n - k--);
    }
    a = a + j + 1;
    Console.WriteLine();
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------
finding arr size without using inbuilt function
int[] array = { 10, 20, 30, 40, 50 };
int count = 0;
foreach (int element in array)
{
    count++;
}
Console.WriteLine("Array size: " + count);
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
pascal triangle
Console.Write("enter a size of n : ");
int n = int.Parse(Console.ReadLine());
int[][] arr = new int[n][];
for (int i = 0; i < n; i++)
{
    arr[i] = new int[i + 1];
    for (int j = 0; j <= i; j++)
    {
        if (j == 0 || j == i)
        {
            arr[i][j] = 1;
            Console.Write(arr[i][j]+" ");
            if (j == i)
            {
                Console.WriteLine();
            }
        }
        else
        {
            arr[i][j] = arr[i - 1][j -1] + arr[i - 1][j];
            Console.Write(arr[i][j] + " ");
        }
    }
}
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
distant vector protocol.
Console.Write("enter no of cities : ");
int n = int .Parse(Console.ReadLine());
Console.Write("enter arr size : ");
int m = int.Parse(Console.ReadLine());
int[] arr = new int[m];
Console.WriteLine("enter arr elements : ");
for (int i = 0; i < m; i++)
{
    arr[i] = int.Parse(Console.ReadLine());
}
int diffm = 0;
int diff1;
for (int i = 0; i < n; i++)
{
    int f = 0;
    for(int k  = 0; k < m; k++)
    {
        if (i == arr[k])
        {
            f = 1;
            break;
        }
    }
    if (f != 1)
    {
        int diff2 = 0;
        for (int j = 0; j < m; j++)
        {
            diff1 = i - arr[j];
            if (j == 0)
            {
                if (diff1 < 0)
                {
                    diff1 = diff1 * -1;
                }
                diff2 = diff1;
            }
            else
            {
                if (diff1 < 0)
                {
                    diff1 = diff1 * -1;
                }
                if (diff1 < diff2)
                {
                    diff2 = diff1;
                }
            }
        }
        if( diff2 > diffm )
        {
            diffm = diff2;
        }
    }
}
Console.WriteLine(diffm);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
